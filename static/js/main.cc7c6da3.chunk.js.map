{"version":3,"sources":["Components/Notification/Notification.module.css","Components/FeedbackOptions/FeedbackOptions.module.css","Components/Container/Container.module.css","Components/Section/Section.module.css","Components/Statistics/Statistics.module.css","Components/Container/Container.js","Components/Section/Section.js","Components/Statistics/Statistics.js","Components/Notification/Notification.js","Components/FeedbackOptions/FeedbackOptions.js","App.js","index.js"],"names":["module","exports","Container","children","className","s","container","Section","title","section","Statistics","good","neutral","bad","total","percent","list","Notification","message","warning","FeedbackOptions","options","onIncrement","feedbackOptions","map","option","data-action","type","btn","onClick","App","state","handleIncrement","setState","totalFeedback","positivePercentage","Math","round","this","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gIACAA,EAAOC,QAAU,CAAC,QAAU,8BAA8B,QAAU,gC,gBCApED,EAAOC,QAAU,CAAC,gBAAkB,yCAAyC,IAAM,+B,oBCAnFD,EAAOC,QAAU,CAAC,UAAY,+B,gBCA9BD,EAAOC,QAAU,CAAC,QAAU,2B,gBCA5BD,EAAOC,QAAU,CAAC,KAAO,2B,qKCCV,SAASC,EAAT,GAAkC,IAAbC,EAAY,EAAZA,SAClC,OAAO,qBAAKC,UAAWC,IAAEC,UAAlB,SAA8BH,I,qBCAxB,SAASI,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOL,EAAY,EAAZA,SACvC,OACE,0BAASC,UAAWC,IAAEI,QAAtB,UACGD,EACAL,K,qBCJQ,SAASO,EAAT,GAA6D,IAAvCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,QAASC,EAAuB,EAAvBA,IAAKC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,QAC9D,OACE,qBAAIX,UAAWC,IAAEW,KAAjB,UACE,wCAAWL,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACZ,uDAA0BC,EAA1B,U,oBCPS,SAASE,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OACE,qBAAKd,UAAWC,IAAEc,QAAlB,SACE,sBAAMf,UAAWC,IAAEa,QAAnB,SAA6BA,M,oBCHpB,SAASE,EAAT,GAAoD,IAAzBC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,YACjD,OACE,qBAAKlB,UAAWC,IAAEkB,gBAAlB,SACGF,EAAQG,KAAI,SAAAC,GAAM,OACjB,wBAEEC,cAAaD,EACbE,KAAK,SACLvB,UAAWC,IAAEuB,IACbC,QAAS,kBAAMP,EAAYG,IAL7B,SAOGA,GANIA,Q,ICgDAK,E,4MAhDbC,MAAQ,CACNpB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPmB,gBAAkB,SAAAP,GAChB,EAAKQ,SAAL,eAAiBR,EAAS,EAAKM,MAAMN,GAAU,K,EAGjDS,cAAgB,WAAO,IAAD,EACW,EAAKH,MACpC,OAFoB,EACZpB,KADY,EACNC,QADM,EACGC,K,EAIzBsB,mBAAqB,WACnB,OAAOC,KAAKC,MAAO,EAAKN,MAAMpB,KAAO,EAAKuB,gBAAmB,M,uDAGrD,IAAD,EACwBI,KAAKP,MAA5BpB,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACvB,OACE,eAACX,EAAD,WACE,cAACK,EAAD,CAASC,MAAM,wBAAf,SACE,cAACY,EAAD,CACEC,QAAS,CAAC,OAAQ,UAAW,OAC7BC,YAAagB,KAAKN,oBAItB,cAACzB,EAAD,CAASC,MAAM,YAAf,SAC4B,IAAzB8B,KAAKJ,gBACJ,cAACxB,EAAD,CACEC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOwB,KAAKJ,gBACZnB,QAASuB,KAAKH,uBAGhB,cAAClB,EAAD,CAAcC,QAAQ,+B,GAzChBqB,IAAMC,WCFxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.cc7c6da3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"warning\":\"Notification_warning__3bXHt\",\"message\":\"Notification_message__d_mA5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedbackOptions\":\"FeedbackOptions_feedbackOptions__1x16p\",\"btn\":\"FeedbackOptions_btn__yho1C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1UkCR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__1Ffi0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__3caVy\"};","import s from './Container.module.css';\n\nexport default function Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n","import PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nexport default function Section({ title, children }) {\n  return (\n    <section className={s.section}>\n      {title}\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from './Statistics.module.css';\n\nexport default function Statistics({ good, neutral, bad, total, percent }) {\n  return (\n    <ul className={s.list}>\n      <li>Good: {good}</li>\n      <li>Neutral: {neutral}</li>\n      <li>Bad: {bad}</li>\n      <li>Total: {total}</li>\n      <li>Positive precentage: {percent}%</li>\n    </ul>\n  );\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  percent: PropTypes.number.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from './Notification.module.css';\n\nexport default function Notification({ message }) {\n  return (\n    <div className={s.warning}>\n      <span className={s.message}>{message}</span>\n    </div>\n  );\n}\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from './FeedbackOptions.module.css';\n\nexport default function FeedbackOptions({ options, onIncrement }) {\n  return (\n    <div className={s.feedbackOptions}>\n      {options.map(option => (\n        <button\n          key={option}\n          data-action={option}\n          type=\"button\"\n          className={s.btn}\n          onClick={() => onIncrement(option)}\n        >\n          {option}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(String).isRequired,\n  onIncrement: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport Container from './Components/Container';\nimport Section from './Components/Section';\nimport Statistics from './Components/Statistics';\nimport Notification from './Components/Notification';\nimport FeedbackOptions from './Components/FeedbackOptions';\n\nclass App extends React.Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleIncrement = option => {\n    this.setState({ [option]: this.state[option] + 1 });\n  };\n\n  totalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  positivePercentage = () => {\n    return Math.round((this.state.good / this.totalFeedback()) * 100);\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    return (\n      <Container>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={['good', 'neutral', 'bad']}\n            onIncrement={this.handleIncrement}\n          />\n        </Section>\n\n        <Section title=\"Statistic\">\n          {this.totalFeedback() !== 0 ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.totalFeedback()}\n              percent={this.positivePercentage()}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}